[{"C:\\Users\\marti\\projects\\airbnb\\client\\src\\index.tsx":"1","C:\\Users\\marti\\projects\\airbnb\\client\\src\\providers\\index.tsx":"2","C:\\Users\\marti\\projects\\airbnb\\client\\src\\routes\\index.tsx":"3","C:\\Users\\marti\\projects\\airbnb\\client\\src\\providers\\App\\index.tsx":"4","C:\\Users\\marti\\projects\\airbnb\\client\\src\\providers\\Auth\\index.tsx":"5","C:\\Users\\marti\\projects\\airbnb\\client\\src\\constants\\index.ts":"6","C:\\Users\\marti\\projects\\airbnb\\client\\src\\routes\\auth\\index.tsx":"7","C:\\Users\\marti\\projects\\airbnb\\client\\src\\routes\\user\\index.tsx":"8","C:\\Users\\marti\\projects\\airbnb\\client\\src\\components\\Loader\\index.tsx":"9","C:\\Users\\marti\\projects\\airbnb\\client\\src\\constants\\types.ts":"10","C:\\Users\\marti\\projects\\airbnb\\client\\src\\constants\\variables.ts":"11","C:\\Users\\marti\\projects\\airbnb\\client\\src\\routes\\auth\\routes.ts":"12","C:\\Users\\marti\\projects\\airbnb\\client\\src\\routes\\user\\routes.ts":"13","C:\\Users\\marti\\projects\\airbnb\\client\\src\\pages\\Home\\index.tsx":"14","C:\\Users\\marti\\projects\\airbnb\\client\\src\\providers\\Theme\\index.tsx":"15","C:\\Users\\marti\\Desktop\\pepe\\src\\index.tsx":"16","C:\\Users\\marti\\Desktop\\pepe\\src\\pages\\Home\\index.tsx":"17"},{"size":229,"mtime":1611097925862,"results":"18","hashOfConfig":"19"},{"size":601,"mtime":1611107931488,"results":"20","hashOfConfig":"19"},{"size":632,"mtime":1611104157803,"results":"21","hashOfConfig":"19"},{"size":488,"mtime":1611098456726,"results":"22","hashOfConfig":"19"},{"size":2761,"mtime":1611104770791,"results":"23","hashOfConfig":"19"},{"size":56,"mtime":1611097906287,"results":"24","hashOfConfig":"19"},{"size":354,"mtime":1611104461088,"results":"25","hashOfConfig":"19"},{"size":354,"mtime":1611104426664,"results":"26","hashOfConfig":"19"},{"size":252,"mtime":1611102882156,"results":"27","hashOfConfig":"19"},{"size":143,"mtime":1611097903154,"results":"28","hashOfConfig":"19"},{"size":29,"mtime":1611097907891,"results":"29","hashOfConfig":"19"},{"size":177,"mtime":1611104856724,"results":"30","hashOfConfig":"19"},{"size":75,"mtime":1611104548220,"results":"31","hashOfConfig":"19"},{"size":102,"mtime":1611107729011,"results":"32","hashOfConfig":"19"},{"size":185,"mtime":1611107725633,"results":"33","hashOfConfig":"19"},{"size":238,"mtime":1611252211702,"results":"34","hashOfConfig":"35"},{"size":5234,"mtime":1611189002384,"results":"36","hashOfConfig":"35"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"j9p90l",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cjumzj",{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"C:\\Users\\marti\\projects\\airbnb\\client\\src\\index.tsx",[],"C:\\Users\\marti\\projects\\airbnb\\client\\src\\providers\\index.tsx",[],"C:\\Users\\marti\\projects\\airbnb\\client\\src\\routes\\index.tsx",[],"C:\\Users\\marti\\projects\\airbnb\\client\\src\\providers\\App\\index.tsx",[],"C:\\Users\\marti\\projects\\airbnb\\client\\src\\providers\\Auth\\index.tsx",[],"C:\\Users\\marti\\projects\\airbnb\\client\\src\\constants\\index.ts",[],"C:\\Users\\marti\\projects\\airbnb\\client\\src\\routes\\auth\\index.tsx",[],"C:\\Users\\marti\\projects\\airbnb\\client\\src\\routes\\user\\index.tsx",[],"C:\\Users\\marti\\projects\\airbnb\\client\\src\\components\\Loader\\index.tsx",[],"C:\\Users\\marti\\projects\\airbnb\\client\\src\\constants\\types.ts",[],"C:\\Users\\marti\\projects\\airbnb\\client\\src\\constants\\variables.ts",[],"C:\\Users\\marti\\projects\\airbnb\\client\\src\\routes\\auth\\routes.ts",[],"C:\\Users\\marti\\projects\\airbnb\\client\\src\\routes\\user\\routes.ts",[],"C:\\Users\\marti\\projects\\airbnb\\client\\src\\pages\\Home\\index.tsx",[],"C:\\Users\\marti\\projects\\airbnb\\client\\src\\providers\\Theme\\index.tsx",[],"C:\\Users\\marti\\Desktop\\pepe\\src\\index.tsx",[],"C:\\Users\\marti\\Desktop\\pepe\\src\\pages\\Home\\index.tsx",["72","73"],"import {\r\n    Button,\r\n    FormControl,\r\n    FormHelperText,\r\n    Grid,\r\n    Input,\r\n    InputLabel,\r\n} from \"@material-ui/core\";\r\nimport { grid } from \"@material-ui/system\";\r\nimport React, { useState } from \"react\";\r\n\r\nexport const HomePage: React.FC = () => {\r\n    const [operacion, setOperacion] = useState({\r\n        a: 100,\r\n        b: 10,\r\n        c: 20,\r\n        d: 20,\r\n        e: 0.1,\r\n    });\r\n    const [pila, setPila] = useState<string[]>([]);\r\n\r\n    function handleChange(\r\n        e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>\r\n    ) {\r\n        setOperacion((prev) => ({\r\n            ...prev,\r\n            [e.target.name]: parseFloat(e.target.value),\r\n        }));\r\n    }\r\n    function calcular() {\r\n        let operaciones: string[] = [\"\"];\r\n        let valorI1 = `(${operacion.b} + ${operacion.c}) + ${operacion.d} = ${operacion.a}`;\r\n        let valorIx = operacion.b + operacion.c + operacion.d;\r\n        let valorI2 = `${valorIx} = ${operacion.a}`;\r\n        let i = operacion.a / valorIx;\r\n        let valorI3 = `i = ${operacion.a} / ${valorIx}`;\r\n        let valorI4 = `i = ${i}`;\r\n        operaciones.push(valorI1, valorI2, valorI3, valorI4);\r\n\r\n        let v = operacion.a - operacion.d;\r\n        let valorV1 = `V = ${operacion.a} - ${operacion.d}`;\r\n        let valorV2 = `V = ${v}`;\r\n        operaciones.push(valorV1, valorV2);\r\n\r\n        let i1 = operacion.a / operacion.b;\r\n        let valorI11 = `I1 = ${v}/ ${operacion.b}`;\r\n        let valorI12 = `I1 = ${i1}`;\r\n        operaciones.push(valorI11, valorI12);\r\n\r\n        let ic = i1 + (operacion.d * i1) / operacion.c;\r\n\r\n        let valorIC1 = `Ic = ${i1} + ${operacion.d}(${i1})/ ${operacion.d}`;\r\n        let valorIC2 = `Ic = ${ic}`;\r\n        operaciones.push(valorIC1, valorIC2);\r\n\r\n        let rth = v / ic;\r\n        let valorRth = `Rth = ${v}/ ${ic}`;\r\n        let valorRth2 = `Rth = ${rth}`;\r\n        operaciones.push(valorRth, valorRth2);\r\n\r\n        let tao = operacion.e / rth;\r\n        let valorTao = `Tao = ${operacion.e} / ${rth}`;\r\n        let valorTao1 = `Tao = ${tao}`;\r\n        operaciones.push(valorTao, valorTao1);\r\n\r\n        let x = 1 / tao;\r\n        let valorX1 = `x = 1/ ${tao}`;\r\n        let valorX2 = `x = ${x}`;\r\n\r\n        operaciones.push(valorX1, valorX2);\r\n\r\n        let resultado1 = `iL = Ic(1-e^(-${x}t))u(t)A`;\r\n        operaciones.push(resultado1);\r\n\r\n        setPila(operaciones);\r\n    }\r\n    return (\r\n        <div style={{ display: \"flex\", marginTop: \"40px\" }}>\r\n            <Grid\r\n                container\r\n                xs={4}\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    marginRight: \"40px\",\r\n                    marginLeft: \"40px\",\r\n                }}\r\n            >\r\n                <img src='imagen.png' alt='' />\r\n                <FormControl>\r\n                    <InputLabel htmlFor='A'>A</InputLabel>\r\n                    <Input\r\n                        id='A'\r\n                        name='a'\r\n                        type='number'\r\n                        onChange={handleChange}\r\n                    />\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel htmlFor='B'>B</InputLabel>\r\n                    <Input\r\n                        id='B'\r\n                        name='b'\r\n                        type='number'\r\n                        onChange={handleChange}\r\n                    />\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel htmlFor='C'>C</InputLabel>\r\n                    <Input\r\n                        id='C'\r\n                        name='c'\r\n                        type='number'\r\n                        onChange={handleChange}\r\n                    />\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel htmlFor='D'>D</InputLabel>\r\n                    <Input\r\n                        id='D'\r\n                        name='d'\r\n                        type='number'\r\n                        onChange={handleChange}\r\n                    />\r\n                </FormControl>\r\n                <FormControl>\r\n                    <InputLabel htmlFor='E'>E</InputLabel>\r\n                    <Input\r\n                        id='E'\r\n                        name='e'\r\n                        type='number'\r\n                        onChange={handleChange}\r\n                    />\r\n                </FormControl>\r\n                <Button\r\n                    style={{ marginTop: \"20px\" }}\r\n                    onClick={calcular}\r\n                    color='primary'\r\n                    variant='contained'\r\n                >\r\n                    Calcular\r\n                </Button>\r\n                <Button\r\n                    style={{ marginTop: \"20px\" }}\r\n                    onClick={() => setPila([])}\r\n                    color='primary'\r\n                    variant='contained'\r\n                >\r\n                    Borrar\r\n                </Button>\r\n            </Grid>\r\n            <Grid xs={4}>\r\n                {pila.map((texto) => (\r\n                    <p key={texto}>{texto}</p>\r\n                ))}\r\n            </Grid>\r\n        </div>\r\n    );\r\n};\r\n",{"ruleId":"74","severity":1,"message":"75","line":4,"column":5,"nodeType":"76","messageId":"77","endLine":4,"endColumn":19},{"ruleId":"74","severity":1,"message":"78","line":9,"column":10,"nodeType":"76","messageId":"77","endLine":9,"endColumn":14},"@typescript-eslint/no-unused-vars","'FormHelperText' is defined but never used.","Identifier","unusedVar","'grid' is defined but never used."]